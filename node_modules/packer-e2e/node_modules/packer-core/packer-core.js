'use strict';
var fs = require('fs'); 
var merge = require('merge');

module.exports = function (grunt, basePath) {

	if(!basePath){
		basePath = __dirname;
	}

	// Package.json
	grunt.config("pkg", grunt.file.readJSON('package.json'));

	// Load tasks
	grunt.log.writeln("PackerJs grunt");

	var dir = basePath + "/node_modules";
	fs.readdirSync(dir).forEach(function(name){
		var taskDir = dir + "/" + name + "/tasks";
	    if (fs.existsSync(taskDir)) { 
	    	grunt.verbose.write("load: " + name);
	        grunt.loadTasks(taskDir);
	    }
	});

	// Load config
	console.log("Load PackerJs config");
	var config_dir = basePath + "/grunt_config";
	if (fs.existsSync(config_dir)) {
		fs.readdirSync(config_dir).forEach(function(name){
			grunt.verbose.write("config: " +  name);
			var config = require(config_dir + "/" + name);
			Object.keys(config).forEach(function(key) {
			  var val = config[key];
			  if(grunt.config(key)){
			  	val = merge(val, grunt.config(key))
			  }
			  grunt.config(key,val);
			});
		});
	}

	// Load tasks
	console.log("Load PackerJs tasks");
	var tasks_dir = basePath + "/grunt_tasks";
	if (fs.existsSync(tasks_dir)) {
		fs.readdirSync(tasks_dir).forEach(function(name){
			grunt.verbose.write("task: " +  name);
			var task = require(tasks_dir + "/" + name);
			Object.keys(task).forEach(function(key) {
			  var val = task[key];
			  grunt.registerTask(key,val);
			});
		});
	}
};